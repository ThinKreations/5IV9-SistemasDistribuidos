/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subneteo;


import javax.swing.JOptionPane;

/**
 *
 * @author jnapo
 */
public class Ventana extends javax.swing.JFrame {

    public int i,j,m1,m2,m3,m4,n,nF,k,y,m,l,cero, p3;
    
    public String bi1,bi2,bi3,bi4,bm1,bm2,bm3,bm4,bm0,m0,x;
    public char tipo;
    //MI CÓDIGO ES UN COMPLETO DESASTRE AAAAA, PERO FUNCIONA
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        setTitle("SubNet");
        setResizable(false);
        setLocationRelativeTo(null);
    }
    
    Var v=new Var();

    public void borrar(){
        jTextip1.setText("");
        jTextip2.setText("");
        jTextip3.setText("");
        jTextip4.setText("");
        jTextsub.setText("");
        jTextField1.setText("");
        jTextArea0.setText("");
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextip1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextsub = new javax.swing.JTextField();
        btnSubnet = new javax.swing.JButton();
        jTextip2 = new javax.swing.JTextField();
        jTextip3 = new javax.swing.JTextField();
        jTextip4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea0 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextip1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextip1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextip1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Dirección IP");

        jLabel3.setText("Subredes");

        jTextsub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextsub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextsubActionPerformed(evt);
            }
        });

        btnSubnet.setBackground(new java.awt.Color(0, 0, 0));
        btnSubnet.setForeground(new java.awt.Color(255, 255, 255));
        btnSubnet.setText("Subneteo");
        btnSubnet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSubnet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubnetActionPerformed(evt);
            }
        });

        jTextip2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextip3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextip4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText(".");

        jLabel4.setText(".");

        jLabel5.setText(".");

        jTextArea0.setColumns(20);
        jTextArea0.setRows(5);
        jTextArea0.setBorder(javax.swing.BorderFactory.createTitledBorder("Subneteo"));
        jScrollPane1.setViewportView(jTextArea0);

        jLabel6.setText("Máscara:");

        jTextField1.setBorder(null);
        jTextField1.setFocusable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        btnBorrar.setBackground(new java.awt.Color(0, 0, 0));
        btnBorrar.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrar.setText("Borrar");
        btnBorrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnBorrar.setBorderPainted(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextsub, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextip1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addComponent(jTextip2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(3, 3, 3)
                        .addComponent(jTextip3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(7, 7, 7)
                                .addComponent(jTextip4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSubnet, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jTextip2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextip3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextip4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubnet))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextsub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextip1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextip1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextip1ActionPerformed

    private void btnSubnetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubnetActionPerformed
        
        if((jTextip1.getText().length()>3)||(jTextip2.getText().length()>3)||(jTextip3.getText().length()>3)||(jTextip4.getText().length()>3)||(jTextip1.getText().isEmpty())||(jTextip2.getText().isEmpty())||(jTextip3.getText().isEmpty())||(jTextip4.getText().isEmpty())){
            JOptionPane.showMessageDialog(null,"ERROR, no dejar vacíos, no ingresar puntos, no negativos ni más de tres dígitos.");
            return;
        }
        if(jTextsub.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Ingresa un número válido de Subredes");
            return;
        }
        try{
            v.setIp1(Integer.parseInt(jTextip1.getText()));
            v.setIp2(Integer.parseInt(jTextip2.getText()));
            v.setIp3(Integer.parseInt(jTextip3.getText()));
            v.setIp4(Integer.parseInt(jTextip4.getText()));
            v.setSub(Integer.parseInt(jTextsub.getText()));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error, ingresa sólo números positivos.");
            return;
        }
        

        if((v.getIp1()<0)||(v.getIp2()<0)||(v.getIp3()<0)||(v.getIp4()<0)||(v.getSub()<0)){
            JOptionPane.showMessageDialog(null, "Ingresa sólo positivos");
            return;
            
        }else if((v.getIp1()>=0)&&(v.getIp1()<=127)){
            v.setType('A');
            v.setMask1(255);
            v.setMask2(0);
            v.setMask3(0);
            v.setMask4(0);
            
            bm1="11111111";
            bm2="00000000";
            bm3="00000000";
            bm4="00000000";
        }else if((v.getIp1()>=128)&&(v.getIp1()<=191)){
            v.setType('B');
            v.setMask1(255);
            v.setMask2(255);
            v.setMask3(0);
            v.setMask4(0);
            
            bm1="11111111";
            bm2="11111111";
            bm3="00000000";
            bm4="00000000";
        }else if((v.getIp1()>=192)&&(v.getIp1()<=223)){
            v.setType('C');
            v.setMask1(255);
            v.setMask2(255);
            v.setMask3(255);
            v.setMask4(0);
            
            bm1="11111111";
            bm2="11111111";
            bm3="11111111";
            bm4="00000000";
        }else if((v.getIp1()>=224)&&(v.getIp1()<=239)){
            v.setType('D');
            v.setMask1(255);
            v.setMask2(255);
            v.setMask3(255);
            v.setMask4(255);
            
            bm1="11111111";
            bm2="11111111";
            bm3="11111111";
            bm4="11111111";
        }else if((v.getIp1()>=240)&&(v.getIp1()<=255)){
            v.setType('E');
            m1=(255);
            m2=(255);
            m3=(255);
            v.setMask4(255);
            
            bm1="11111111";
            bm2="11111111";
            bm3="11111111";
            bm4="11111111";
        }else if(v.getIp1()>=256){
            JOptionPane.showMessageDialog(null,"Ingresa una IP válida");
            return;
        }
        
        if((v.getIp2()>=0)&&(v.getIp2()<=255)){
            
        }else{
            JOptionPane.showMessageDialog(null,"Ingresa una IP válida");
            return;
        }
        if((v.getIp3()>=0)&&(v.getIp2()<=255)){
        }else{
            JOptionPane.showMessageDialog(null,"Ingresa una IP válida");
            return;
        }
        if((v.getIp4()>=0)&&(v.getIp2()<=255)){
        }else{
            JOptionPane.showMessageDialog(null,"Ingresa una IP válida");
            return;
        }
        v.setMask(bm1+"."+bm2+"."+bm3+"."+bm4);
        
        
        bm0=(bm1+"."+bm2+"."+bm3+"."+bm4);
        v.setMask0(bm0);
        
        switch(v.getType()){
            case 65:
                tipo='A';
                jTextField1.setText("255.0.0.0");
                break;
            case 66:
                tipo='B';
                jTextField1.setText("255.255.0.0");
                break;
            case 67:
                tipo='C';
                jTextField1.setText("255.255.255.0");
                break;
            case 68:
                tipo='D';
                jTextField1.setText("255.255.255.255");
                break;
            case 69:
                tipo='E';
                jTextField1.setText("255.255.255.255");
                break;
        }
        
        bi1=Integer.toBinaryString(v.getIp1());
        while(bi1.length()<=7){
            bi1="0"+bi1;
        }
        bi2=Integer.toBinaryString(v.getIp2());
        while(bi2.length()<=7){
            bi2="0"+bi2;
        }
        bi3=Integer.toBinaryString(v.getIp3());
        while(bi3.length()<=7){
            bi3="0"+bi3;
        }
        bi4=Integer.toBinaryString(v.getIp4());
        while(bi4.length()<=7){
            bi4="0"+bi4;
        }
        
        x=Integer.toBinaryString(v.getSub());
        while(x.length()<=7){
            x="0"+x;
        }
        nF=0;
        while((nF!=x.length())&&(x.charAt(nF)!='1')){
            nF++;
        }
        
        System.out.println(bi1+"."+bi2+"."+bi3+"."+bi4);
        
        nF=nF++;
        n=x.length()-nF;
        
        System.out.println(x);
        System.out.println(nF);
        System.out.println("N= "+n);
        
        switch(n){
            case 0:
                break;
            case 1:
                if(tipo=='A'){
                    bm2="10000000";
                    m=128;
                }else if(tipo=='B'){
                    bm3="10000000";
                    m=128;
                }else if(tipo=='C'){
                    bm4="10000000";
                    m=128;
                }
                    break;
            case 2:
                if(tipo=='A'){
                    bm2="11000000";
                    m=192;
                }else if(tipo=='B'){
                    bm3="11000000";
                    m=192;
                }else if(tipo=='C'){
                    bm4="11000000";
                    m=192;
                }
                    break;
            case 3:
                if(tipo=='A'){
                    bm2="11100000";
                    m=224;
                }else if(tipo=='B'){
                    bm3="11100000";
                    m=224;
                }else if(tipo=='C'){
                    bm4="11100000";
                    m=224;
                }
                    break;
            case 4:
                if(tipo=='A'){
                    bm2="11110000";
                    m=240;
                }else if(tipo=='B'){
                    bm3="11110000";
                    m=240;
                }else if(tipo=='C'){
                    bm4="11110000";
                    m=240;
                }
                    break;
            case 5:
                if(tipo=='A'){
                    bm2="11111000";
                    m=248;
                }else if(tipo=='B'){
                    bm3="11111000";
                    m=248;
                }else if(tipo=='C'){
                    bm4="11111000";
                    m=248;
                }
                    break;    
            case 6:
                if(tipo=='A'){
                    bm2="11111100";
                    m=252;
                }else if(tipo=='B'){
                    bm3="11111100";
                    m=252;
                }else if(tipo=='C'){
                    bm4="11111100";
                    m=252;
                }
                    break;
                case 7:
                if(tipo=='A'){
                    bm2="11111110";
                    m=254;
                }else if(tipo=='B'){
                    bm3="11111110";
                    m=254;
                }else if(tipo=='C'){
                    bm4="11111110";
                    m=254;
                }
                    break;
            case 8:
                if(tipo=='A'){
                    bm2="11111111";
                    m=255;
                }else if(tipo=='B'){
                    bm3="11111111";
                    m=255;
                }else if(tipo=='C'){
                    bm4="11111111";
                    m=255;
                }
                    break;
            
            case 9:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="10000000";
                    m=128;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="10000000";
                    m=128;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                   
                }
                break;
            case 10:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11000000";
                    m=192;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11000000";
                    m=192;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    
                }
                break;
            case 11:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11100000";
                    m=224;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11100000"; 
                    m=224;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    
                }
                break;
            case 12:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11110000";
                    m=240;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11110000";    
                    m=240;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    
                }
                break;
            case 13:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111000";
                    m=248;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11111000";
                    m=248;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }
                break;
            case 14:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111100";
                    m=252;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11111100"; 
                    m=252;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }
                break; 
            case 15:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111110";
                    m=254;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11111110";  
                    m=254;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    
                }
                break;
            case 16:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    m=255;
                }else if(tipo=='B'){
                    bm3="11111111";
                    bm4="11111111";
                    m=255;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }
                break;   
            case 17:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="10000000";
                    m=128;
                } else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }
                break;
            case 18:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11000000";
                    m=196;
                } else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }
                break;
            case 19:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11100000";
                    m=224;
                }else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                } 
                break;
            case 20:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11110000";
                    m=240;
                }else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }
                break;    
            case 21:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11111000";
                    m=248;
                }else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                } 
                break;      
            case 22:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11111100";
                    m=252;
                }else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                } 
                break;  
            case 23:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11111110";
                    m=254;
                }else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                } 
                break;   
            case 24:
                if(tipo=='A'){
                    bm2="11111111";
                    bm3="11111111";
                    bm4="11111111";
                    m=255;
                }else if(tipo=='B'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                }else if(tipo=='C'){
                    JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
                    return;
                } 
                break; 
            
        }
        
        if(n>24){
              JOptionPane.showMessageDialog(null,"Las subredes superal en límite.");
              
              return;
        }  
        
        p3=256-m;
        
        while(p3>0){
            p3--;
            System.out.println(p3);
        }
        
        bm0=(bm1+"."+bm2+"."+bm3+"."+bm4);
        v.setMask0(bm0);
        v.setIp0(bi1+"."+bi2+"."+bi3+"."+bi4);
        
    
        System.out.println(v.getIp1()+"."+v.getIp2()+"."+v.getIp3()+"."+v.getIp4());
        System.out.println(v.getType()+" = "+tipo);
        System.out.println(v.getSub());
        System.out.println(bm0);
        System.out.println(bi1+"."+bi2+"."+bi3+"."+bi4);
        if(tipo=='D'){
            JOptionPane.showMessageDialog(null,"Tipo de Red No permitida (D)");
            borrar();
            return;
        }else if(tipo=='E'){
            JOptionPane.showMessageDialog(null,"Tipo de Red No permitida (E)");
            borrar();
            return;
        }
        jTextArea0.setText("Clase: "+tipo+"\nIP en binario: "+v.getIp0()+"\nMáscara en binario: "+v.getMask()+"\nBits Robados="+n+"\n→ "+v.getMask0());      
        
    }//GEN-LAST:event_btnSubnetActionPerformed

    private void jTextsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextsubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextsubActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        borrar();
    }//GEN-LAST:event_btnBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnSubnet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea0;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextip1;
    private javax.swing.JTextField jTextip2;
    private javax.swing.JTextField jTextip3;
    private javax.swing.JTextField jTextip4;
    private javax.swing.JTextField jTextsub;
    // End of variables declaration//GEN-END:variables
}
